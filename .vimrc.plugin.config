" ==================================================================
" All configuration of vim plugins. including plugin commands keymap
" for native vim keymap config, refer to .vimrc.keymaps
" I don't do comment here, to understand more about plugins' config,
" please refer to their README.
" ===================================================================

" -------------------------------------------------------------------
"                               Airline
" -------------------------------------------------------------------
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#ctrlp#show_adjacent_modes=1
let g:airline#extensions#wordcount#enabled=1
let g:airline#extensions#syntastic#enabled=1
let g:airline#extensions#tagbar#enabled=1
let g:airline#extensions#branch#format=1
let g:airline#extensions#tabline#buffer_idx_mode = 1
  nmap <leader>1 <Plug>AirlineSelectTab1
  nmap <leader>2 <Plug>AirlineSelectTab2
  nmap <leader>3 <Plug>AirlineSelectTab3
  nmap <leader>4 <Plug>AirlineSelectTab4
  nmap <leader>5 <Plug>AirlineSelectTab5
  nmap <leader>6 <Plug>AirlineSelectTab6
  nmap <leader>7 <Plug>AirlineSelectTab7
  nmap <leader>8 <Plug>AirlineSelectTab8
  nmap <leader>9 <Plug>AirlineSelectTab9
  nmap <leader>- <Plug>AirlineSelectPrevTab
  nmap <leader>+ <Plug>AirlineSelectNextTab

" -------------------------------------------------------------------
"                               number
" -------------------------------------------------------------------
let g:numbers_exclude=['tagbar', 'gundo', 'minibufexpl', 'nerdtree']
set number

" -------------------------------------------------------------------
"                           nerd-commenter
" -------------------------------------------------------------------
let g:NERDSpaceDelims = 1
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" -------------------------------------------------------------------
"                            indent guides
" -------------------------------------------------------------------
let g:indent_guides_start_level = 2

" -------------------------------------------------------------------
"                             Syntastics
" -------------------------------------------------------------------
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'
let g:syntastic_HTML_checkers = ['eslint']
let g:syntastic_HTML_eslint_exec = 'eslint_d'
let g:syntastic_cs_checkers = ['syntax', 'semantic', 'issues']

" -------------------------------------------------------------------
"                               ultisnips
" -------------------------------------------------------------------
let g:UltiSnipsExpandTrigger="<C-Enter>"
let g:UltiSnipsJumpForwardTrigger="<C-b>"
let g:UltiSnipsJumpBackwardTrigger="<C-l>"
let g:UltiSnipsUsePythonVersion=3
let g:UltiSnipsRemoveSelectModeMappings=0

" -------------------------------------------------------------------
"                               Nerdtree
" -------------------------------------------------------------------
map <C-e> :NERDTreeToggle<CR>

" -------------------------------------------------------------------
"                               Devicons
" -------------------------------------------------------------------
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
exec 'autocmd FileType nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
exec 'autocmd FileType nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#002b36')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#002b36')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#002b36')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#002b36')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#002b36')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#002b36')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#002b36')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#002b36')
call NERDTreeHighlightFile('ds_store', 'Gray', 'none', '#686868', '#002b36')
call NERDTreeHighlightFile('gitconfig', 'Gray', 'none', '#686868', '#002b36')
call NERDTreeHighlightFile('gitignore', 'Gray', 'none', '#686868', '#002b36')
call NERDTreeHighlightFile('bashrc', 'Gray', 'none', '#686868', '#002b36')
call NERDTreeHighlightFile('bashprofile', 'Gray', 'none', '#686868', '#002b36')

if exists("g:loaded_webdevicons")
  call webdevicons#refresh()
endif

" -------------------------------------------------------------------
"                               Tagbar
" -------------------------------------------------------------------
nmap <F7> :TagbarToggle<CR>

" -------------------------------------------------------------------
"                               Gundo
" -------------------------------------------------------------------
nmap <F8> :GundoToggle<CR>

" -------------------------------------------------------------------
"                           vim-javascript
" -------------------------------------------------------------------
let g:javascript_conceal_function       = "ƒ"
let g:javascript_conceal_null           = "ø"
let g:javascript_conceal_this           = "@"
let g:javascript_conceal_return         = "⇚"
let g:javascript_conceal_undefined      = "¿"
let g:javascript_conceal_NaN            = "ℕ"
let g:javascript_conceal_prototype      = "¶"
let g:javascript_conceal_static         = "•"
let g:javascript_conceal_super          = "Ω"
let g:javascript_conceal_arrow_function = "⇒"

" -------------------------------------------------------------------
"                             Vim Pencil
" -------------------------------------------------------------------
let g:penci#WrapModeDefault='soft'
nmap <leader>sp :SoftPencil<CR>
nmap <leader>hp :HardPencil<CR>

" -------------------------------------------------------------------
"                               ctrlp
" -------------------------------------------------------------------
if isdirectory(expand("~/.vim/bundle/ctrlp.vim"))
    let g:ctrlp_working_path_mode='ra'
endif

" -------------------------------------------------------------------
"                          vim-translator
" -------------------------------------------------------------------
